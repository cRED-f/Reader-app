// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url  	= env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  // If you want to use Prisma Migrate, you will need to manually create a shadow database
  // https://neon.tech/docs/guides/prisma-migrate#configure-a-shadow-database-for-prisma-migrate
  // make sure to append ?connect_timeout=10 to the connection string
  // shadowDatabaseUrl = env(“SHADOW_DATABASE_URL”)
}
model User {
  id String @id  @unique
  email  String? @unique

  File File[]


  stripeCustomerId String? @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId String? @unique @map(name: "stripe_subscription_id")
  stripePriceId String? @unique @map(name: "stripe_price_id")
  stripeProductId String? @unique @map(name: "stripe_product_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}
enum uploadStatus {
  PENDING
  PROCESSING
  SUCCESS
  FAILED
}

model File{
  id String @id @default(uuid())
  name String
  uploadStatus  uploadStatus @default(PENDING)
  url String
  key String
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User User? @relation(fields: [userId], references: [id])
  userId String? 

}
